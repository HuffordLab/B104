#!/bin/bash

module load samtools

module load bowtie2

module load picard

module load py-cutadapt

module load py-pybigwig/0.3.4-py2-w4fmye2

module load py-numpy/1.15.2-py2-fdkji5s

module load py-scipy/1.1.0-py2-rrg4qpb

module load py-pip

module load bowtie


#name of the genome 
name=$1

#step1: building genome reference index. Please note here the input reference genome file contains chloroplast sequence which is used as a unmethylated control sequence in the next step

methylpy build-reference \
        --input-files ${name}_include_chl.fasta \
        --output-prefix $name \
        --num-procs 32

#step2: methlypy pipeline is used for read trimming, alignment and methylation state calling

#calling methylated regions for root tissue
methylpy single-end-pipeline --read-files ${name}-Root.fastq.gz --sample root --forward-ref ${name}_f --reverse-ref ${name}_r --ref-fasta ${name}_include_chl.fasta --num-procs 36 --remove-clonal True --path-to-picard="/opt/rit/spack-app/linux-rhel7-x86_64/gcc-4.8.5/picard-2.17.0-ft5qztzntoymuxiqt3b6yi6uqcmgzmds/bin" --compress-output False --merge-by-max-mapq True --trim-reads True --generate-mpileup-file True --unmethylated-control "ChrC:" --binom-test True --min-cov 3 --path-to-output ${name}_rootresults

#calling methylated regions for leaf tissue
methylpy single-end-pipeline --read-files ${name}-Leaf.fastq.gz --sample leaf --forward-ref ${name}_f --reverse-ref ${name}_r --ref-fasta ${name}_include_chl.fasta --num-procs 36 --remove-clonal True --path-to-picard="/opt/rit/spack-app/linux-rhel7-x86_64/gcc-4.8.5/picard-2.17.0-ft5qztzntoymuxiqt3b6yi6uqcmgzmds/bin" --compress-output False --merge-by-max-mapq True --trim-reads True --generate-mpileup-file True --unmethylated-control "ChrC:" --binom-test True --min-cov 3 --path-to-output ${name}_leafresults
